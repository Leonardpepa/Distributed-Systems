<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>Home</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css"
        integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <style>
        body {
            font: 14px sans-serif;
        }

        .wrapper {
            width: 360px;
            padding: 20px;
        }

        #main {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
        }
    </style>
</head>

<body>

    <!-- Deposit Modal -->
    <div class="modal fade" id="depositModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Deposit Your Money</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <input class="form-control" id="deposit-input" type="number"
                        placeholder="Enter the amount to deposit" required>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button onclick="deposit()" type="button" class="btn btn-primary">Deposit</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Withdraw Modal -->
    <div class="modal fade" id="withdrawModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Withdraw Your Money</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <input class="form-control" id="withdraw-input" type="number"
                        placeholder="Enter the amount to withdraw" required>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button onclick="withdraw()" type="button" class="btn btn-primary">Withdraw</button>
                </div>
            </div>
        </div>
    </div>


    <!-- Transfer Modal -->
    <div class="modal fade" id="transferModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Transfer Your Money</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <input class="form-control" id="transfer-amount" type="number"
                        placeholder="Enter the amount to transfer" required>
                    <br>
                    <input class="form-control" type="text" id="transfer_to"
                        placeholder="Enter the username of the account to transfer" required>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button onclick="transfer()" type="button" class="btn btn-primary">Transfer</button>
                </div>
            </div>
        </div>
    </div>






    <main id="main">
        <h1>Hello <%= user.username %>
        </h1>
        <input hidden id="id" type="text" value="<%= user._id %>">
        <div>
            <a href="/user/info" class="btn btn-info">Info</a>
            <a href="/user/statements" class="btn btn-info">Statement info</a>
            <button data-toggle="modal" data-target="#depositModal" class="btn btn-success">Deposit</button>
            <button data-toggle="modal" data-target="#withdrawModal" class="btn btn-success">withdraw</button>
            <button onclick='getBalance()' class="btn btn-secondary">balance</button>
            <button data-toggle="modal" data-target="#transferModal" class="btn btn-secondary">transfer</button>
            <a class="btn btn-danger" href="/logout">Logout</a>
        </div>
    </main>
    <script>
        const getBalance = async () => {
            const res = await fetch("/user/balance", {
                credentials: "include",
                method: "get",
                headers: {
                    "Content-Type": "application/json",
                },
            });

            const data = await res.json();
            if (data.error) {
                await alert(`${data.error}`);
            } else {
                await alert(`Your Balance is ${data.balance}`);
            }
        }

        const deposit = async () => {

            const amount = Number(document.getElementById("deposit-input").value);


            if (amount <= 0) {
                await alert(`Amount cannot be zero or negative`);
                return;
            }

            const res = await fetch("/user/deposit", {
                credentials: "include",
                method: "post",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({ amount: amount }),
            });

            const data = await res.json();

            if (data.error) {
                await alert(`${data.error}`);
            } else {
                await alert(`Your Balance is ${data.balance}`);
            }
        }

        const withdraw = async () => {

            const amount = Number(document.getElementById("withdraw-input").value);

            if (amount <= 0) {
                await alert(`Amount cannot be zero or negative`);
                return;
            }

            const res = await fetch("/user/withdraw", {
                credentials: "include",
                method: "post",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({ amount: amount }),
            });

            const data = await res.json();

            if (data.error) {
                await alert(`${data.error}`);
            } else {
                await alert(`Your Balance is ${data.balance}`);
            }
        }


        const transfer = async () => {
            const amount = Number(document.getElementById("transfer-amount").value);

            const transfer_to = document.getElementById("transfer_to").value;

            if (amount <= 0) {
                await alert(`Amount cannot be zero or negative`);
                return;
            }

            if (transfer_to.length === 0) {
                await alert(`Username to transfer cannot be null`);
                return;
            }


            const res = await fetch("/user/transfer", {
                credentials: "include",
                method: "post",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({ username: transfer_to, amount: amount }),
            });

            const data = await res.json();

            if (data.error) {
                await alert(`${data.error}`);
            } else {
                await alert(`You transfered ${amount} successfully, your new Balance is ${data.balance}`);
            }
        }



    </script>
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"
        integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN"
        crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js"
        integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"
        crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js"
        integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"
        crossorigin="anonymous"></script>
</body>

</html>